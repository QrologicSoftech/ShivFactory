@model ShivFactory.Business.Repository.SubCategoryModel
@{
    ViewBag.Title = "Add SubCategory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid page-body-wrapper">
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">@ViewBag.Title</h4>
                            <div class="row grid-margin">
                                <div class="col-12">
                                    <div class="wrapper d-flex" style=" text-align: start;">
                                        <a class="btn btn-sm btn-gradient-primary mr-2" href="~/Admin/Admin/SubCategory">  Back to List </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="wrapper border-top">
                            <div class="card-body">
                                @using (Html.BeginForm("AddSubCategory", "Admin", FormMethod.Post, new { @enctype = "multipart/form-data", id = "myform", @class = "forms-sample" }))
                                {
                                <div class="row">
                                    <div class="col-lg-4 col-sm-4">
                                        <div class="form-group">
                                            <label>Sub Category Name</label>
                                        </div>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SubCategoryName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SubCategoryName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-sm-4">
                                        <div class="form-group">
                                            <label>Category</label>
                                        </div>
                                        <div class="form-group">
                                            @Html.DropDownListFor(model => model.CategoryId, ViewBag.category as SelectList, "Select", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-sm-2">
                                        <div class="form-group">
                                            <label>IsActive</label>
                                        </div>
                                        <div class="form-group">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @style = "height: 30px; width:30px;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-sm-2">
                                        <div class="form-group">
                                            <label>Show At Home</label>
                                        </div>
                                        <div class="form-group">
                                            @Html.CheckBoxFor(x => x.ShowAtHome, new { @style = "height: 30px; width:30px;" })
                                        </div>
                                    </div>
                                </div>

                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label>File upload</label>
                                                <input type="file" name="img[]" class="file-upload-default">
                                            </div>
                                            <div class="ajax-file-upload-container form-group">
                                                @Html.TextBoxFor(model => model.PostedFile, new { @class = "form-control file-upload-info", type = "file", accept = "image/*" })
                                                @Html.ValidationMessageFor(model => model.PostedFile, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            @{ var display = Model != null && Model.ImagePath != null ? "display:block" : "display:none";
                                                var imgPath = Model != null && Model.ImagePath != null ? Model.ImagePath : "";}
                                            <div class="form-group">
                                                <img src="@imgPath" id="Img" runat="server" style="border: 1px solid #eee3e3; @display;" height="100" width="100" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="form-group">
                                                <label>GST</label>
                                            </div>
                                            <div class="form-group">
                                                @Html.TextBoxFor(model => model.GST, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.GST, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="form-group">
                                                <label>SGST</label>
                                            </div>
                                            <div class="form-group">
                                                @Html.TextBoxFor(model => model.SGST, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.SGST, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="form-group">
                                                <label>IGST</label>
                                            </div>
                                            <div class="form-group">
                                                @Html.TextBoxFor(model => model.IGST, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.IGST, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                    </div>
                                    @Html.HiddenFor(model => model.SubCategoryId)
                                    @Html.HiddenFor(model => model.ImagePath)

                                    <button type="submit" class="btn btn-gradient-primary mr-2">Submit</button>
                                    <button class="btn btn-light" type="reset">Cancel</button>

                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
                $("#Img").css("display", "block");
            }
            reader.readAsDataURL(input.files[0]); // convert to base64 string
        }
    }
    $("#PostedFile").change(function () {
        readURL(this);
    });
</script>
